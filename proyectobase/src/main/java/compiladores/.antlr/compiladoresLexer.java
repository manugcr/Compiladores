// Generated from /home/manu/facultad/compiladores/Compiladores/proyectobase/src/main/java/compiladores/compiladores.g4 by ANTLR 4.13.1

    package compiladores;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class compiladoresLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, O_PAREN=5, C_PAREN=6, O_BRACE=7, C_BRACE=8, 
		SEMICOLON=9, COMMA=10, EQUAL=11, ADD=12, SUB=13, MULT=14, DIV=15, MOD=16, 
		AND=17, OR=18, EQUALS=19, NOT_EQUALS=20, LESS_THAN=21, GREATER_THAN=22, 
		LESS_OR_EQUAL=23, GREATER_OR_EQUAL=24, RETURN=25, IF=26, ELSE=27, WHILE=28, 
		FOR=29, TYPE=30, TEXT=31, ID=32, NUMBER=33, WS=34, OTHER=35;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "LETTER", "DIGIT", "INT", "STRING", "BOOLEAN", 
			"CHAR", "FLOAT", "DOUBLE", "O_PAREN", "C_PAREN", "O_BRACE", "C_BRACE", 
			"SEMICOLON", "COMMA", "EQUAL", "ADD", "SUB", "MULT", "DIV", "MOD", "AND", 
			"OR", "EQUALS", "NOT_EQUALS", "LESS_THAN", "GREATER_THAN", "LESS_OR_EQUAL", 
			"GREATER_OR_EQUAL", "RETURN", "IF", "ELSE", "WHILE", "FOR", "TYPE", "TEXT", 
			"ID", "NUMBER", "WS", "OTHER"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'+='", "'++'", "'--'", "'-='", "'('", "')'", "'{'", "'}'", "';'", 
			"','", "'='", "'+'", "'-'", "'*'", "'/'", "'%'", "'&&'", "'||'", "'=='", 
			"'!='", "'<'", "'>'", "'<='", "'>='", "'return'", "'if'", "'else'", "'while'", 
			"'for'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, "O_PAREN", "C_PAREN", "O_BRACE", "C_BRACE", 
			"SEMICOLON", "COMMA", "EQUAL", "ADD", "SUB", "MULT", "DIV", "MOD", "AND", 
			"OR", "EQUALS", "NOT_EQUALS", "LESS_THAN", "GREATER_THAN", "LESS_OR_EQUAL", 
			"GREATER_OR_EQUAL", "RETURN", "IF", "ELSE", "WHILE", "FOR", "TYPE", "TEXT", 
			"ID", "NUMBER", "WS", "OTHER"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public compiladoresLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "compiladores.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000#\u0101\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004"+
		"\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001"+
		"\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001"+
		"\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010"+
		"\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013"+
		"\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0016"+
		"\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0018"+
		"\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001a"+
		"\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001d"+
		"\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001f\u0001\u001f"+
		"\u0001\u001f\u0001 \u0001 \u0001 \u0001 \u0001 \u0001 \u0001 \u0001!\u0001"+
		"!\u0001!\u0001\"\u0001\"\u0001\"\u0001\"\u0001\"\u0001#\u0001#\u0001#"+
		"\u0001#\u0001#\u0001#\u0001$\u0001$\u0001$\u0001$\u0001%\u0001%\u0001"+
		"%\u0001%\u0001%\u0001%\u0003%\u00da\b%\u0001&\u0001&\u0001&\u0003&\u00df"+
		"\b&\u0001&\u0001&\u0001&\u0005&\u00e4\b&\n&\f&\u00e7\t&\u0001&\u0001&"+
		"\u0001\'\u0001\'\u0003\'\u00ed\b\'\u0001\'\u0001\'\u0001\'\u0005\'\u00f2"+
		"\b\'\n\'\f\'\u00f5\t\'\u0001(\u0004(\u00f8\b(\u000b(\f(\u00f9\u0001)\u0001"+
		")\u0001)\u0001)\u0001*\u0001*\u0000\u0000+\u0001\u0001\u0003\u0002\u0005"+
		"\u0003\u0007\u0004\t\u0000\u000b\u0000\r\u0000\u000f\u0000\u0011\u0000"+
		"\u0013\u0000\u0015\u0000\u0017\u0000\u0019\u0005\u001b\u0006\u001d\u0007"+
		"\u001f\b!\t#\n%\u000b\'\f)\r+\u000e-\u000f/\u00101\u00113\u00125\u0013"+
		"7\u00149\u0015;\u0016=\u0017?\u0018A\u0019C\u001aE\u001bG\u001cI\u001d"+
		"K\u001eM\u001fO Q!S\"U#\u0001\u0000\u0003\u0002\u0000AZaz\u0001\u0000"+
		"09\u0003\u0000\t\n\r\r  \u0106\u0000\u0001\u0001\u0000\u0000\u0000\u0000"+
		"\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000"+
		"\u0007\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000"+
		"\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000"+
		"\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001"+
		"\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000"+
		"\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000"+
		"\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001"+
		"\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000"+
		"\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000"+
		"\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?"+
		"\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000"+
		"\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000"+
		"\u0000I\u0001\u0000\u0000\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M"+
		"\u0001\u0000\u0000\u0000\u0000O\u0001\u0000\u0000\u0000\u0000Q\u0001\u0000"+
		"\u0000\u0000\u0000S\u0001\u0000\u0000\u0000\u0000U\u0001\u0000\u0000\u0000"+
		"\u0001W\u0001\u0000\u0000\u0000\u0003Z\u0001\u0000\u0000\u0000\u0005]"+
		"\u0001\u0000\u0000\u0000\u0007`\u0001\u0000\u0000\u0000\tc\u0001\u0000"+
		"\u0000\u0000\u000be\u0001\u0000\u0000\u0000\rg\u0001\u0000\u0000\u0000"+
		"\u000fk\u0001\u0000\u0000\u0000\u0011r\u0001\u0000\u0000\u0000\u0013z"+
		"\u0001\u0000\u0000\u0000\u0015\u007f\u0001\u0000\u0000\u0000\u0017\u0085"+
		"\u0001\u0000\u0000\u0000\u0019\u008c\u0001\u0000\u0000\u0000\u001b\u008e"+
		"\u0001\u0000\u0000\u0000\u001d\u0090\u0001\u0000\u0000\u0000\u001f\u0092"+
		"\u0001\u0000\u0000\u0000!\u0094\u0001\u0000\u0000\u0000#\u0096\u0001\u0000"+
		"\u0000\u0000%\u0098\u0001\u0000\u0000\u0000\'\u009a\u0001\u0000\u0000"+
		"\u0000)\u009c\u0001\u0000\u0000\u0000+\u009e\u0001\u0000\u0000\u0000-"+
		"\u00a0\u0001\u0000\u0000\u0000/\u00a2\u0001\u0000\u0000\u00001\u00a4\u0001"+
		"\u0000\u0000\u00003\u00a7\u0001\u0000\u0000\u00005\u00aa\u0001\u0000\u0000"+
		"\u00007\u00ad\u0001\u0000\u0000\u00009\u00b0\u0001\u0000\u0000\u0000;"+
		"\u00b2\u0001\u0000\u0000\u0000=\u00b4\u0001\u0000\u0000\u0000?\u00b7\u0001"+
		"\u0000\u0000\u0000A\u00ba\u0001\u0000\u0000\u0000C\u00c1\u0001\u0000\u0000"+
		"\u0000E\u00c4\u0001\u0000\u0000\u0000G\u00c9\u0001\u0000\u0000\u0000I"+
		"\u00cf\u0001\u0000\u0000\u0000K\u00d9\u0001\u0000\u0000\u0000M\u00db\u0001"+
		"\u0000\u0000\u0000O\u00ec\u0001\u0000\u0000\u0000Q\u00f7\u0001\u0000\u0000"+
		"\u0000S\u00fb\u0001\u0000\u0000\u0000U\u00ff\u0001\u0000\u0000\u0000W"+
		"X\u0005+\u0000\u0000XY\u0005=\u0000\u0000Y\u0002\u0001\u0000\u0000\u0000"+
		"Z[\u0005+\u0000\u0000[\\\u0005+\u0000\u0000\\\u0004\u0001\u0000\u0000"+
		"\u0000]^\u0005-\u0000\u0000^_\u0005-\u0000\u0000_\u0006\u0001\u0000\u0000"+
		"\u0000`a\u0005-\u0000\u0000ab\u0005=\u0000\u0000b\b\u0001\u0000\u0000"+
		"\u0000cd\u0007\u0000\u0000\u0000d\n\u0001\u0000\u0000\u0000ef\u0007\u0001"+
		"\u0000\u0000f\f\u0001\u0000\u0000\u0000gh\u0005i\u0000\u0000hi\u0005n"+
		"\u0000\u0000ij\u0005t\u0000\u0000j\u000e\u0001\u0000\u0000\u0000kl\u0005"+
		"s\u0000\u0000lm\u0005t\u0000\u0000mn\u0005r\u0000\u0000no\u0005i\u0000"+
		"\u0000op\u0005n\u0000\u0000pq\u0005g\u0000\u0000q\u0010\u0001\u0000\u0000"+
		"\u0000rs\u0005b\u0000\u0000st\u0005o\u0000\u0000tu\u0005o\u0000\u0000"+
		"uv\u0005l\u0000\u0000vw\u0005e\u0000\u0000wx\u0005a\u0000\u0000xy\u0005"+
		"n\u0000\u0000y\u0012\u0001\u0000\u0000\u0000z{\u0005c\u0000\u0000{|\u0005"+
		"h\u0000\u0000|}\u0005a\u0000\u0000}~\u0005r\u0000\u0000~\u0014\u0001\u0000"+
		"\u0000\u0000\u007f\u0080\u0005f\u0000\u0000\u0080\u0081\u0005l\u0000\u0000"+
		"\u0081\u0082\u0005o\u0000\u0000\u0082\u0083\u0005a\u0000\u0000\u0083\u0084"+
		"\u0005t\u0000\u0000\u0084\u0016\u0001\u0000\u0000\u0000\u0085\u0086\u0005"+
		"d\u0000\u0000\u0086\u0087\u0005o\u0000\u0000\u0087\u0088\u0005u\u0000"+
		"\u0000\u0088\u0089\u0005b\u0000\u0000\u0089\u008a\u0005l\u0000\u0000\u008a"+
		"\u008b\u0005e\u0000\u0000\u008b\u0018\u0001\u0000\u0000\u0000\u008c\u008d"+
		"\u0005(\u0000\u0000\u008d\u001a\u0001\u0000\u0000\u0000\u008e\u008f\u0005"+
		")\u0000\u0000\u008f\u001c\u0001\u0000\u0000\u0000\u0090\u0091\u0005{\u0000"+
		"\u0000\u0091\u001e\u0001\u0000\u0000\u0000\u0092\u0093\u0005}\u0000\u0000"+
		"\u0093 \u0001\u0000\u0000\u0000\u0094\u0095\u0005;\u0000\u0000\u0095\""+
		"\u0001\u0000\u0000\u0000\u0096\u0097\u0005,\u0000\u0000\u0097$\u0001\u0000"+
		"\u0000\u0000\u0098\u0099\u0005=\u0000\u0000\u0099&\u0001\u0000\u0000\u0000"+
		"\u009a\u009b\u0005+\u0000\u0000\u009b(\u0001\u0000\u0000\u0000\u009c\u009d"+
		"\u0005-\u0000\u0000\u009d*\u0001\u0000\u0000\u0000\u009e\u009f\u0005*"+
		"\u0000\u0000\u009f,\u0001\u0000\u0000\u0000\u00a0\u00a1\u0005/\u0000\u0000"+
		"\u00a1.\u0001\u0000\u0000\u0000\u00a2\u00a3\u0005%\u0000\u0000\u00a30"+
		"\u0001\u0000\u0000\u0000\u00a4\u00a5\u0005&\u0000\u0000\u00a5\u00a6\u0005"+
		"&\u0000\u0000\u00a62\u0001\u0000\u0000\u0000\u00a7\u00a8\u0005|\u0000"+
		"\u0000\u00a8\u00a9\u0005|\u0000\u0000\u00a94\u0001\u0000\u0000\u0000\u00aa"+
		"\u00ab\u0005=\u0000\u0000\u00ab\u00ac\u0005=\u0000\u0000\u00ac6\u0001"+
		"\u0000\u0000\u0000\u00ad\u00ae\u0005!\u0000\u0000\u00ae\u00af\u0005=\u0000"+
		"\u0000\u00af8\u0001\u0000\u0000\u0000\u00b0\u00b1\u0005<\u0000\u0000\u00b1"+
		":\u0001\u0000\u0000\u0000\u00b2\u00b3\u0005>\u0000\u0000\u00b3<\u0001"+
		"\u0000\u0000\u0000\u00b4\u00b5\u0005<\u0000\u0000\u00b5\u00b6\u0005=\u0000"+
		"\u0000\u00b6>\u0001\u0000\u0000\u0000\u00b7\u00b8\u0005>\u0000\u0000\u00b8"+
		"\u00b9\u0005=\u0000\u0000\u00b9@\u0001\u0000\u0000\u0000\u00ba\u00bb\u0005"+
		"r\u0000\u0000\u00bb\u00bc\u0005e\u0000\u0000\u00bc\u00bd\u0005t\u0000"+
		"\u0000\u00bd\u00be\u0005u\u0000\u0000\u00be\u00bf\u0005r\u0000\u0000\u00bf"+
		"\u00c0\u0005n\u0000\u0000\u00c0B\u0001\u0000\u0000\u0000\u00c1\u00c2\u0005"+
		"i\u0000\u0000\u00c2\u00c3\u0005f\u0000\u0000\u00c3D\u0001\u0000\u0000"+
		"\u0000\u00c4\u00c5\u0005e\u0000\u0000\u00c5\u00c6\u0005l\u0000\u0000\u00c6"+
		"\u00c7\u0005s\u0000\u0000\u00c7\u00c8\u0005e\u0000\u0000\u00c8F\u0001"+
		"\u0000\u0000\u0000\u00c9\u00ca\u0005w\u0000\u0000\u00ca\u00cb\u0005h\u0000"+
		"\u0000\u00cb\u00cc\u0005i\u0000\u0000\u00cc\u00cd\u0005l\u0000\u0000\u00cd"+
		"\u00ce\u0005e\u0000\u0000\u00ceH\u0001\u0000\u0000\u0000\u00cf\u00d0\u0005"+
		"f\u0000\u0000\u00d0\u00d1\u0005o\u0000\u0000\u00d1\u00d2\u0005r\u0000"+
		"\u0000\u00d2J\u0001\u0000\u0000\u0000\u00d3\u00da\u0003\r\u0006\u0000"+
		"\u00d4\u00da\u0003\u000f\u0007\u0000\u00d5\u00da\u0003\u0011\b\u0000\u00d6"+
		"\u00da\u0003\u0013\t\u0000\u00d7\u00da\u0003\u0015\n\u0000\u00d8\u00da"+
		"\u0003\u0017\u000b\u0000\u00d9\u00d3\u0001\u0000\u0000\u0000\u00d9\u00d4"+
		"\u0001\u0000\u0000\u0000\u00d9\u00d5\u0001\u0000\u0000\u0000\u00d9\u00d6"+
		"\u0001\u0000\u0000\u0000\u00d9\u00d7\u0001\u0000\u0000\u0000\u00d9\u00d8"+
		"\u0001\u0000\u0000\u0000\u00daL\u0001\u0000\u0000\u0000\u00db\u00de\u0005"+
		"\"\u0000\u0000\u00dc\u00df\u0003\t\u0004\u0000\u00dd\u00df\u0005_\u0000"+
		"\u0000\u00de\u00dc\u0001\u0000\u0000\u0000\u00de\u00dd\u0001\u0000\u0000"+
		"\u0000\u00df\u00e5\u0001\u0000\u0000\u0000\u00e0\u00e4\u0003\t\u0004\u0000"+
		"\u00e1\u00e4\u0003\u000b\u0005\u0000\u00e2\u00e4\u0005_\u0000\u0000\u00e3"+
		"\u00e0\u0001\u0000\u0000\u0000\u00e3\u00e1\u0001\u0000\u0000\u0000\u00e3"+
		"\u00e2\u0001\u0000\u0000\u0000\u00e4\u00e7\u0001\u0000\u0000\u0000\u00e5"+
		"\u00e3\u0001\u0000\u0000\u0000\u00e5\u00e6\u0001\u0000\u0000\u0000\u00e6"+
		"\u00e8\u0001\u0000\u0000\u0000\u00e7\u00e5\u0001\u0000\u0000\u0000\u00e8"+
		"\u00e9\u0005\"\u0000\u0000\u00e9N\u0001\u0000\u0000\u0000\u00ea\u00ed"+
		"\u0003\t\u0004\u0000\u00eb\u00ed\u0005_\u0000\u0000\u00ec\u00ea\u0001"+
		"\u0000\u0000\u0000\u00ec\u00eb\u0001\u0000\u0000\u0000\u00ed\u00f3\u0001"+
		"\u0000\u0000\u0000\u00ee\u00f2\u0003\t\u0004\u0000\u00ef\u00f2\u0003\u000b"+
		"\u0005\u0000\u00f0\u00f2\u0005_\u0000\u0000\u00f1\u00ee\u0001\u0000\u0000"+
		"\u0000\u00f1\u00ef\u0001\u0000\u0000\u0000\u00f1\u00f0\u0001\u0000\u0000"+
		"\u0000\u00f2\u00f5\u0001\u0000\u0000\u0000\u00f3\u00f1\u0001\u0000\u0000"+
		"\u0000\u00f3\u00f4\u0001\u0000\u0000\u0000\u00f4P\u0001\u0000\u0000\u0000"+
		"\u00f5\u00f3\u0001\u0000\u0000\u0000\u00f6\u00f8\u0003\u000b\u0005\u0000"+
		"\u00f7\u00f6\u0001\u0000\u0000\u0000\u00f8\u00f9\u0001\u0000\u0000\u0000"+
		"\u00f9\u00f7\u0001\u0000\u0000\u0000\u00f9\u00fa\u0001\u0000\u0000\u0000"+
		"\u00faR\u0001\u0000\u0000\u0000\u00fb\u00fc\u0007\u0002\u0000\u0000\u00fc"+
		"\u00fd\u0001\u0000\u0000\u0000\u00fd\u00fe\u0006)\u0000\u0000\u00feT\u0001"+
		"\u0000\u0000\u0000\u00ff\u0100\t\u0000\u0000\u0000\u0100V\u0001\u0000"+
		"\u0000\u0000\t\u0000\u00d9\u00de\u00e3\u00e5\u00ec\u00f1\u00f3\u00f9\u0001"+
		"\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}
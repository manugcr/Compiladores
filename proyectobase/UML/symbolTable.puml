@startuml SymbolTable

hide circle

class SymbolTable <<singleton>> {
    - table : LinkedList<Map<String,ID>  
    + getInstanceOf() : SymbolTable
    + addContext() : void
    + delContext() : void
    + addSymbol() : void
    + searchSymbol() : ID
    + searchLocalSymbol() : ID
    + printSymbolTable() : void
}

enum DataType <<enum>> {
    INT
    DOUBLE
    CHAR
    VOID 
    STRING
    BOOLEAN
    + getDataType() : Datatype
}

abstract class ID <<abstract>> {
    - name : String
    - dataType : DataType
    - initialized : Boolean
    - used : Boolean
    + setName() : void
    + getName() : String
    + setDataType() : void
    + getDataType() : DataType
    + setUsed() : void
    + getUsed() : Boolean
    + setInitialized() : void
    + getInitialized() : Boolean
}

class Variable {}

class Function {
    - args: LinkedList<Parameter>
    - isPrototype: Boolean
    + setArgs(): void
    + getArgs(): LinkedList<Parameter>
    + getDataTypeArgs(): LinkedList<DataType>
    + addArg(): void
    + setIsPrototype(): void
    + getIsPrototype(): Boolean
    + compareArgs(): Boolean
}

class Parameter {
    - dataType: DataType
    - name: String
    + getDataType(): DataType
    + getName(): String
    + setDataType(): void
    + setName(): void
}

SymbolTable --> ID
ID <|-- Variable
ID <|-- Function
ID --> DataType
Function <-- Parameter

@enduml